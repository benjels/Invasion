package gamelogic;

import gamelogic.events.ClientGeneratedEvent;
import gamelogic.events.PlayerEvent;

/**
 * represents the behaviour of the character that a player is playing as. different character strategies respond differently
 * to key presses (e.g. the fighter will shoot the gun if action1 pressed and the sorcerer will warp).
 * @author brownmax1
 *
 */
public interface CharacterStrategy {

	/**
	 * converts an event generated by the player/client's input into an event that can be applied in the
	 * game logic. Which event is created will depend upon the character that the player is playing as. e.g. if a player playing as
	 * the Fighter pushes the key that generates the Action1PushedEvent, that will be converted into a GunAttackEvent
	 * @param tempClientEvent the event that was generated by the client's input
	 * @return PlayerEvent the event to be applied to the game state
	 */
	abstract PlayerEvent createCharacterEvent(ClientGeneratedEvent tempClientEvent);

}
